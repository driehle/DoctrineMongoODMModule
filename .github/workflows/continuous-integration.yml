name: "Continuous Integration"

on:
  pull_request:
    branches:
      - "*.x"
    paths:
      - ".github/workflows/continuous-integration.yml"
      - "composer.*"
      - "src/**"
      - "phpunit.xml.dist"
      - "tests/**"
  push:
    branches:
      - "*.x"
    paths:
      - ".github/workflows/continuous-integration.yml"
      - "composer.*"
      - "src/**"
      - "phpunit.xml.dist"
      - "tests/**"

jobs:
  phpunit:
    name: "PHPUnit"
    runs-on: "ubuntu-22.04"

    strategy:
      matrix:
        php-version:
          - "8.1"
          - "8.2"
          - "8.3"
          - "8.4"
        dependencies:
          - "highest"
        include:
          - php-version: "8.1"
            dependencies: "lowest"

    services:
      mongodb:
        image: "mongo:5"
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - name: "Install PHP with PCOV"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.php-version != '7.1' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "pcov"
          ini-values: "zend.assertions=1"

      - name: "Install PHP with XDebug"
        uses: "shivammathur/setup-php@v2"
        if: "${{ matrix.php-version == '7.1' }}"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "xdebug"
          ini-values: "zend.assertions=1"

      - name: "Set COMPOSER_ROOT_VERSION"
        run: |
          echo "COMPOSER_ROOT_VERSION=${{ inputs.composer-root-version }}" >> $GITHUB_ENV
        if: "${{ inputs.composer-root-version }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v3"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Configure test application"
        run: "cp ./tests/TestConfiguration.php ./config/application.config.php"

      - name: "Create schema"
        run: "./vendor/bin/doctrine-module odm:schema:create"

      - name: "Drop schema"
        run: "./vendor/bin/doctrine-module odm:schema:drop"

      - name: "Run PHPUnit"
        run: "./vendor/bin/phpunit --coverage-clover=coverage.xml"

      - name: "Upload coverage file"
        uses: "actions/upload-artifact@v4"
        with:
          name: "phpunit-${{ matrix.php-version }}-${{ matrix.dependencies }}.coverage"
          path: "coverage.xml"

  upload_coverage:
    name: "Upload coverage to Codecov"
    runs-on: "ubuntu-22.04"
    needs:
      - "phpunit"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          fetch-depth: 2

      - name: "Download coverage files"
        uses: "actions/download-artifact@v4"
        with:
          path: "reports"

      - name: "Upload to Codecov"
        uses: "codecov/codecov-action@v5"
        with:
          directory: "reports"
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
